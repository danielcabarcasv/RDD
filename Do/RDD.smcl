{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}<unnamed>
       {txt}log:  {res}/Users/danielcabarcas/Documents/GitHub/RDD/Do/RDD.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res}14 Jun 2020, 14:41:34

{com}. 
. use "/Users/danielcabarcas/Documents/GitHub/RDD/Data/hansen_dwi.dta", clear

. 
. *3

. gen D=0

. replace D=1 if bac1>=0.08
{txt}(191,548 real changes made)

{com}. label var D "DUI threshold"

. label var white "White"

. label var male "Male"

. label var aged "Age"

. label var acc "Accident"

. label var bac1 "BAC"

. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Tables"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Tables

{com}. 
. rdrobust recidivism bac1, c(0.08)
{res}{err}Mass points detected in the running variable.
{res}
Sharp RD estimates using local polynomial regression.

{txt}{ralign 18: Cutoff c = .08}{col 19} {c |} {col 21}Left of {res}c{col 33}{txt}Right of {res}c{col 55}{txt}Number of obs = {res}    214558
{txt}{hline 19}{c +}{hline 22}{col 55}BW type       = {res}{ralign 10:mserd}
{txt}{ralign 18:Number of obs}{col 19} {c |} {col 21}{res}    23010{col 34}   191548{col 55}{txt}Kernel        = {res}{ralign 10:Triangular}
{txt}{ralign 18:Eff. Number of obs}{col 19} {c |} {col 21}{res}    16574{col 34}    41013{col 55}{txt}VCE method    = {res}{ralign 10:NN}
{txt}{ralign 18:Order est. (p)}{col 19} {c |} {col 21}{res}        1{col 34}        1
{txt}{ralign 18:Order bias (q)}{col 19} {c |} {col 21}{res}        2{col 34}        2
{txt}{ralign 18:BW est. (h)}{col 19} {c |} {col 21}{res}    0.031{col 34}    0.031
{txt}{ralign 18:BW bias (b)}{col 19} {c |} {col 21}{res}    0.050{col 34}    0.050
{txt}{ralign 18:rho (h/b)}{col 19} {c |} {col 21}{res}    0.633{col 34}    0.633
{txt}{ralign 18:Unique obs}{col 19} {c |} {col 21}{res}       81{col 34}      318

Outcome: recidivism. Running variable: bac1.
{txt}{hline 19}{c TT}{hline 60}
{ralign 18:Method}{col 19} {c |} {col 24}Coef.{col 33}Std. Err.{col 46}z{col 52}P>|z|{col 61}[95% Conf. Interval]
{hline 19}{c +}{hline 60}
{ralign 18:Conventional}{col 19} {c |} {col 22}{res}-.01826{col 33} .00567{col 43}-3.2203{col 52}0.001{col 60}-.029376{col 73}-.007147
{txt}{ralign 18:Robust}{col 19} {c |} {col 22}{res}    -{col 33}    -{col 43}-2.5025{col 52}0.012{col 60}-.029963{col 73}-.003643
{txt}{hline 19}{c BT}{hline 60}
Estimates adjusted for mass points in the running variable.

{com}. h rdrobust

. rdrobust
{err}something required
{txt}{search r(100):r(100);}

{com}. h robust

. xi: reg recidivism bac1 if bac1>.03 & lagdemvoteshare<.13
{err}lagdemvoteshare not found
{txt}{search r(111):r(111);}

{com}. 
. xi: reg recidivism bac1 if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(1, 89965)     = {res}     1.34
{txt}       Model {c |} {res} .128392972         1  .128392972   {txt}Prob > F        ={res}    0.2463
{txt}    Residual {c |} {res} 8592.00946    89,965  .095503912   {txt}R-squared       ={res}    0.0000
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30904

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 8}bac1 {c |}{col 14}{res}{space 2}-.0545834{col 26}{space 2} .0470761{col 37}{space 1}   -1.16{col 46}{space 3}0.246{col 54}{space 4}-.1468522{col 67}{space 3} .0376853
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1123115{col 26}{space 2} .0047466{col 37}{space 1}   23.66{col 46}{space 3}0.000{col 54}{space 4} .1030083{col 67}{space 3} .1216148
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. 
. reg recidivism D bac1 male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(6, 89960)     = {res}    54.03
{txt}       Model {c |} {res} 30.8506323         6  5.14177206   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 8561.28722    89,960   .09516771   {txt}R-squared       ={res}    0.0036
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0035
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30849

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0273331{col 26}{space 2} .0040337{col 37}{space 1}   -6.78{col 46}{space 3}0.000{col 54}{space 4}-.0352391{col 67}{space 3}-.0194271
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .3210099{col 26}{space 2} .0750691{col 37}{space 1}    4.28{col 46}{space 3}0.000{col 54}{space 4} .1738753{col 67}{space 3} .4681445
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331999{col 26}{space 2} .0025358{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282299{col 67}{space 3}   .03817
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162127{col 26}{space 2} .0029087{col 37}{space 1}    5.57{col 46}{space 3}0.000{col 54}{space 4} .0105117{col 67}{space 3} .0219138
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008474{col 26}{space 2} .0000891{col 37}{space 1}   -9.51{col 46}{space 3}0.000{col 54}{space 4} -.001022{col 67}{space 3}-.0006728
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0044392{col 26}{space 2} .0034144{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4} -.002253{col 67}{space 3} .0111315
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0853324{col 26}{space 2} .0069415{col 37}{space 1}   12.29{col 46}{space 3}0.000{col 54}{space 4} .0717271{col 67}{space 3} .0989376
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. reg recidivism D bac1 male white aged acc if bac1>.055 & bac1<.105

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    46,957
{txt}{hline 13}{c +}{hline 34}   F(6, 46950)     = {res}    31.12
{txt}       Model {c |} {res} 17.5107097         6  2.91845161   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 4403.57786    46,950  .093792926   {txt}R-squared       ={res}    0.0040
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0038
{txt}       Total {c |} {res} 4421.08857    46,956  .094153858   {txt}Root MSE        =   {res} .30626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0219433{col 26}{space 2} .0055831{col 37}{space 1}   -3.93{col 46}{space 3}0.000{col 54}{space 4}-.0328863{col 67}{space 3}-.0110004
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .1875675{col 26}{space 2} .2010223{col 37}{space 1}    0.93{col 46}{space 3}0.351{col 54}{space 4}-.2064391{col 67}{space 3} .5815741
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0357382{col 26}{space 2} .0034752{col 37}{space 1}   10.28{col 46}{space 3}0.000{col 54}{space 4} .0289269{col 67}{space 3} .0425496
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0175726{col 26}{space 2} .0039737{col 37}{space 1}    4.42{col 46}{space 3}0.000{col 54}{space 4} .0097842{col 67}{space 3}  .025361
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0007555{col 26}{space 2} .0001216{col 37}{space 1}   -6.21{col 46}{space 3}0.000{col 54}{space 4}-.0009939{col 67}{space 3}-.0005172
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0043052{col 26}{space 2} .0049106{col 37}{space 1}    0.88{col 46}{space 3}0.381{col 54}{space 4}-.0053197{col 67}{space 3} .0139301
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0861509{col 26}{space 2} .0155768{col 37}{space 1}    5.53{col 46}{space 3}0.000{col 54}{space 4} .0556202{col 67}{space 3} .1166815
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. gen bac1D = bac1*D

. gen bac1^2 = bac1^2
{err}variable {bf}bac1{sf} already defined
{txt}{search r(110):r(110);}

{com}. gen bac12D  = bac12*D
{err}bac12 not found
{txt}{search r(111):r(111);}

{com}. gen bac12 = bac1^2

. gen bac12D  = bac12*D

. reg recidivism D bac1 male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(6, 89960)     = {res}    54.03
{txt}       Model {c |} {res} 30.8506323         6  5.14177206   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 8561.28722    89,960   .09516771   {txt}R-squared       ={res}    0.0036
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0035
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30849

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0273331{col 26}{space 2} .0040337{col 37}{space 1}   -6.78{col 46}{space 3}0.000{col 54}{space 4}-.0352391{col 67}{space 3}-.0194271
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .3210099{col 26}{space 2} .0750691{col 37}{space 1}    4.28{col 46}{space 3}0.000{col 54}{space 4} .1738753{col 67}{space 3} .4681445
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331999{col 26}{space 2} .0025358{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282299{col 67}{space 3}   .03817
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162127{col 26}{space 2} .0029087{col 37}{space 1}    5.57{col 46}{space 3}0.000{col 54}{space 4} .0105117{col 67}{space 3} .0219138
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008474{col 26}{space 2} .0000891{col 37}{space 1}   -9.51{col 46}{space 3}0.000{col 54}{space 4} -.001022{col 67}{space 3}-.0006728
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0044392{col 26}{space 2} .0034144{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4} -.002253{col 67}{space 3} .0111315
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0853324{col 26}{space 2} .0069415{col 37}{space 1}   12.29{col 46}{space 3}0.000{col 54}{space 4} .0717271{col 67}{space 3} .0989376
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. reg recidivism D bac1 bac1D male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(7, 89959)     = {res}    47.00
{txt}       Model {c |} {res} 31.3056142         7   4.4722306   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 8560.83224    89,959  .095163711   {txt}R-squared       ={res}    0.0036
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0036
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30849

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0590663{col 26}{space 2}  .015063{col 37}{space 1}   -3.92{col 46}{space 3}0.000{col 54}{space 4}-.0885896{col 67}{space 3} -.029543
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.0428678{col 26}{space 2} .1825631{col 37}{space 1}   -0.23{col 46}{space 3}0.814{col 54}{space 4}-.4006896{col 67}{space 3} .3149541
{txt}{space 7}bac1D {c |}{col 14}{res}{space 2} .4380899{col 26}{space 2} .2003558{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .0453945{col 67}{space 3} .8307854
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331803{col 26}{space 2} .0025357{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282103{col 67}{space 3} .0381503
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162238{col 26}{space 2} .0029087{col 37}{space 1}    5.58{col 46}{space 3}0.000{col 54}{space 4} .0105229{col 67}{space 3} .0219248
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008537{col 26}{space 2} .0000891{col 37}{space 1}   -9.58{col 46}{space 3}0.000{col 54}{space 4}-.0010284{col 67}{space 3} -.000679
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0042096{col 26}{space 2}  .003416{col 37}{space 1}    1.23{col 46}{space 3}0.218{col 54}{space 4}-.0024857{col 67}{space 3} .0109049
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1093521{col 26}{space 2} .0129945{col 37}{space 1}    8.42{col 46}{space 3}0.000{col 54}{space 4} .0838831{col 67}{space 3} .1348211
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. reg recidivism D bac1 bac12D male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(7, 89959)     = {res}    47.10
{txt}       Model {c |} {res} 31.3754477         7  4.48220681   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  8560.7624    89,959  .095162934   {txt}R-squared       ={res}    0.0037
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0036
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30848

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}  -.03675{col 26}{space 2} .0056877{col 37}{space 1}   -6.46{col 46}{space 3}0.000{col 54}{space 4}-.0478978{col 67}{space 3}-.0256022
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.0655732{col 26}{space 2} .1809245{col 37}{space 1}   -0.36{col 46}{space 3}0.717{col 54}{space 4}-.4201836{col 67}{space 3} .2890371
{txt}{space 6}bac12D {c |}{col 14}{res}{space 2} 2.189773{col 26}{space 2}  .932459{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .3621623{col 67}{space 3} 4.017384
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331841{col 26}{space 2} .0025357{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282142{col 67}{space 3} .0381541
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162242{col 26}{space 2} .0029087{col 37}{space 1}    5.58{col 46}{space 3}0.000{col 54}{space 4} .0105232{col 67}{space 3} .0219251
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008543{col 26}{space 2} .0000891{col 37}{space 1}   -9.59{col 46}{space 3}0.000{col 54}{space 4} -.001029{col 67}{space 3}-.0006796
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0041884{col 26}{space 2}  .003416{col 37}{space 1}    1.23{col 46}{space 3}0.220{col 54}{space 4}-.0025069{col 67}{space 3} .0108838
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1108539{col 26}{space 2} .0128953{col 37}{space 1}    8.60{col 46}{space 3}0.000{col 54}{space 4} .0855792{col 67}{space 3} .1361286
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. br recidivism

. br

. gen first_offenders = 0

. replace first_offender = 1 if bac1<0.8 & recidivism==0
{txt}(189,319 real changes made)

{com}. drop first_offenders

. gen first_offenders = 0

. replace first_offender = 1 if bac1>=0.8 & recidivism==0
{txt}(0 real changes made)

{com}. br

. drop first_offenders

. gen first_offenders = 0

. replace first_offender = 1 if bac1>=0.08 & recidivism==0
{txt}(168,995 real changes made)

{com}. cmogram recidivism bac1, cut(0,08) if bac1<0.15
{err}option {bf:if} not allowed
{txt}{search r(198):r(198);}

{com}. preserve

. drop if bac1<0.15
{txt}(124,642 observations deleted)

{com}. cmogram recidivism bac1, cut(0,08) if bac1<0.15
{err}option {bf:if} not allowed
{txt}{search r(198):r(198);}

{com}. restore

. count
  {res}214,558

{com}. cmogram recidivism bac1 if bac1<0.15, cut(0,08) 

Plotting mean of recidivism, conditional on bac1.

n = 124642

{err}options not allowed
{txt}{search r(101):r(101);}

{com}. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) 

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) 

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) qfitci

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) lfit title("BAC and Recidivism (Linear Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) qfitci title("BAC and Recidivism (Quadratic Fit)") ylabel="Recidivism rate"
{err}option {bf:ylabel} not allowed
{txt}{search r(198):r(198);}

{com}. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) qfitci title("BAC and Recidivism (Quadratic Fit)") ylab="Recidivism rate"
{err}option {bf:ylab} not allowed
{txt}{search r(198):r(198);}

{com}. 
. h cmogram 

. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) lfit legend title("BAC and Recidivism (Linear Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) lfit title("BAC and Recidivism (Linear Fit)") ylabel("Recidivism rate")
{err}option {bf:ylabel()} not allowed
{txt}{search r(198):r(198);}

{com}. 
. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) qfitci title("BAC and Recidivism (Quadratic Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. graph export cmogram_bac1recidivism_qfit.png, as(png) replace
{txt}(file cmogram_bac1recidivism_qfit.png written in PNG format)

{com}. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) lfit title("BAC and Recidivism (Linear Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. graph export cmogram_bac1recidivism_lfit.png, as(png) replace
{txt}(file cmogram_bac1recidivism_lfit.png written in PNG format)

{com}. cmogram male bac1, cut(0.08) scatter line(0.08) lfit title("Male Linear")

Plotting mean of male, conditional on bac1.

n = 214558

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .7218088151116199)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .7837209302325582)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .8)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .8141592920353983)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .7967479674796748)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .8135593220338984)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .9310344827586207)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .8181818181818182)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .7454545454545455)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .8705035971223022)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .8217054263565892)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .8650793650793651)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .803921568627451)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .8187134502923976)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .8777777777777778)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .8285714285714286)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .8226600985221675)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .7836538461538461)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .7877358490566038)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .7927927927927928)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .7568807339449541)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .7747747747747747)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .7892857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .8047138047138047)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .8058252427184466)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .8301369863013699)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .7994722955145118)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .7809734513274337)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .8108108108108109)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .7614314115308151)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .8038194444444444)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .7824074074074074)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .8231552162849872)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .7907488986784141)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .7679144385026738)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .7401574803149606)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .7740213523131673)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .7656739811912225)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .7733990147783252)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .8096479791395046)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .8007224563515954)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .7805571347356453)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .7885228480340064)
Bin #1: [.08,.0870961538644937] (n = 7516) (mean = .7904470463012241)
Bin #2: (.0870961538644937,.0941923077289874] (n = 8836) (mean = .784857401539158)
Bin #3: (.0941923077289874,.1012884615934811] (n = 9669) (mean = .797807425793774)
Bin #4: (.1012884615934811,.1083846154579748] (n = 10403) (mean = .7977506488512929)
Bin #5: (.1083846154579748,.1154807693224685] (n = 10849) (mean = .7935293575444742)
Bin #6: (.1154807693224685,.1225769231869622] (n = 11032) (mean = .7933284989122552)
Bin #7: (.1225769231869622,.1296730770514559] (n = 11176) (mean = .7934860415175375)
Bin #8: (.1296730770514559,.1367692309159496] (n = 11318) (mean = .7950167874182718)
Bin #9: (.1367692309159496,.1438653847804433] (n = 11281) (mean = .7931034482758621)
Bin #10: (.1438653847804433,.150961538644937] (n = 11104) (mean = .788364553314121)
Bin #11: (.150961538644937,.1580576925094307] (n = 11942) (mean = .7924133311003182)
Bin #12: (.1580576925094307,.1651538463739244] (n = 9820) (mean = .7831975560081467)
Bin #13: (.1651538463739244,.1722500002384181] (n = 9268) (mean = .7898144151920587)
Bin #14: (.1722500002384181,.1793461541029118] (n = 8405) (mean = .792266508030934)
Bin #15: (.1793461541029118,.1864423079674055] (n = 7425) (mean = .7886868686868687)
Bin #16: (.1864423079674055,.1935384618318992] (n = 6904) (mean = .7875144843568945)
Bin #17: (.1935384618318992,.2006346156963929] (n = 5882) (mean = .7927575654539273)
Bin #18: (.2006346156963929,.2077307695608866] (n = 5054) (mean = .7872971903442818)
Bin #19: (.2077307695608866,.2148269234253803] (n = 4234) (mean = .7777515351913085)
Bin #20: (.2148269234253803,.221923077289874] (n = 3642) (mean = .7847336628226249)
Bin #21: (.221923077289874,.2290192311543677] (n = 3441) (mean = .7776809067131648)
Bin #22: (.2290192311543677,.2361153850188614] (n = 2402) (mean = .7922564529558701)
Bin #23: (.2361153850188614,.2432115388833551] (n = 1976) (mean = .7844129554655871)
Bin #24: (.2432115388833551,.2503076927478488] (n = 1584) (mean = .7752525252525253)
Bin #25: (.2503076927478488,.2574038466123425] (n = 1313) (mean = .7783701447067783)
Bin #26: (.2574038466123425,.2645000004768362] (n = 1075) (mean = .7776744186046511)
Bin #27: (.2645000004768362,.2715961543413299] (n = 789) (mean = .8073510773130546)
Bin #28: (.2715961543413299,.2786923082058236] (n = 664) (mean = .7545180722891566)
Bin #29: (.2786923082058236,.2857884620703173] (n = 530) (mean = .7679245283018868)
Bin #30: (.2857884620703173,.292884615934811] (n = 425) (mean = .7694117647058824)
Bin #31: (.292884615934811,.2999807697993047] (n = 348) (mean = .7758620689655172)
Bin #32: (.2999807697993047,.3070769236637984] (n = 303) (mean = .759075907590759)
Bin #33: (.3070769236637984,.3141730775282921] (n = 223) (mean = .7668161434977578)
Bin #34: (.3141730775282921,.3212692313927858] (n = 170) (mean = .7705882352941177)
Bin #35: (.3212692313927858,.3283653852572795] (n = 133) (mean = .7142857142857143)
Bin #36: (.3283653852572795,.3354615391217732] (n = 90) (mean = .7555555555555555)
Bin #37: (.3354615391217732,.3425576929862669] (n = 102) (mean = .7647058823529411)
Bin #38: (.3425576929862669,.3496538468507606] (n = 75) (mean = .7066666666666667)
Bin #39: (.3496538468507606,.3567500007152543] (n = 41) (mean = .7560975609756098)
Bin #40: (.3567500007152543,.363846154579748] (n = 30) (mean = .7333333333333333)
Bin #41: (.363846154579748,.3709423084442417] (n = 17) (mean = .8235294117647058)
Bin #42: (.3709423084442417,.3780384623087354] (n = 19) (mean = .5263157894736842)
Bin #43: (.3780384623087354,.3851346161732291] (n = 20) (mean = .65)
Bin #44: (.3851346161732291,.3922307700377228] (n = 4) (mean = .75)
Bin #45: (.3922307700377228,.3993269239022165] (n = 5) (mean = .8)
Bin #46: (.3993269239022165,.4064230777667102] (n = 3) (mean = 1)
Bin #47: (.4064230777667102,.4135192316312039] (n = 2) (mean = 0)
Bin #48: (.4135192316312039,.4206153854956976] (n = 1) (mean = 0)
Bin #49: (.4206153854956976,.4277115393601913] (n = 1) (mean = 1)
Bin #50: (.4277115393601913,.434807693224685] (n = 0) (mean = .)
Bin #51: (.434807693224685,.4419038470891787] (n = 1) (mean = 1)
Bin #52: (.4419038470891787,.4490000009536743] (n = 1) (mean = 1)

. graph export cmogram_male_lfit.png, as(png) replace
{txt}(file cmogram_male_lfit.png written in PNG format)

{com}. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Figures"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Figures

{com}. 
. cmogram male bac1, cut(0.08) scatter line(0.08) lfit title("Male Linear")

Plotting mean of male, conditional on bac1.

n = 214558

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .7218088151116199)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .7837209302325582)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .8)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .8141592920353983)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .7967479674796748)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .8135593220338984)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .9310344827586207)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .8181818181818182)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .7454545454545455)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .8705035971223022)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .8217054263565892)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .8650793650793651)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .803921568627451)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .8187134502923976)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .8777777777777778)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .8285714285714286)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .8226600985221675)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .7836538461538461)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .7877358490566038)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .7927927927927928)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .7568807339449541)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .7747747747747747)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .7892857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .8047138047138047)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .8058252427184466)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .8301369863013699)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .7994722955145118)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .7809734513274337)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .8108108108108109)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .7614314115308151)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .8038194444444444)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .7824074074074074)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .8231552162849872)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .7907488986784141)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .7679144385026738)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .7401574803149606)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .7740213523131673)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .7656739811912225)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .7733990147783252)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .8096479791395046)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .8007224563515954)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .7805571347356453)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .7885228480340064)
Bin #1: [.08,.0870961538644937] (n = 7516) (mean = .7904470463012241)
Bin #2: (.0870961538644937,.0941923077289874] (n = 8836) (mean = .784857401539158)
Bin #3: (.0941923077289874,.1012884615934811] (n = 9669) (mean = .797807425793774)
Bin #4: (.1012884615934811,.1083846154579748] (n = 10403) (mean = .7977506488512929)
Bin #5: (.1083846154579748,.1154807693224685] (n = 10849) (mean = .7935293575444742)
Bin #6: (.1154807693224685,.1225769231869622] (n = 11032) (mean = .7933284989122552)
Bin #7: (.1225769231869622,.1296730770514559] (n = 11176) (mean = .7934860415175375)
Bin #8: (.1296730770514559,.1367692309159496] (n = 11318) (mean = .7950167874182718)
Bin #9: (.1367692309159496,.1438653847804433] (n = 11281) (mean = .7931034482758621)
Bin #10: (.1438653847804433,.150961538644937] (n = 11104) (mean = .788364553314121)
Bin #11: (.150961538644937,.1580576925094307] (n = 11942) (mean = .7924133311003182)
Bin #12: (.1580576925094307,.1651538463739244] (n = 9820) (mean = .7831975560081467)
Bin #13: (.1651538463739244,.1722500002384181] (n = 9268) (mean = .7898144151920587)
Bin #14: (.1722500002384181,.1793461541029118] (n = 8405) (mean = .792266508030934)
Bin #15: (.1793461541029118,.1864423079674055] (n = 7425) (mean = .7886868686868687)
Bin #16: (.1864423079674055,.1935384618318992] (n = 6904) (mean = .7875144843568945)
Bin #17: (.1935384618318992,.2006346156963929] (n = 5882) (mean = .7927575654539273)
Bin #18: (.2006346156963929,.2077307695608866] (n = 5054) (mean = .7872971903442818)
Bin #19: (.2077307695608866,.2148269234253803] (n = 4234) (mean = .7777515351913085)
Bin #20: (.2148269234253803,.221923077289874] (n = 3642) (mean = .7847336628226249)
Bin #21: (.221923077289874,.2290192311543677] (n = 3441) (mean = .7776809067131648)
Bin #22: (.2290192311543677,.2361153850188614] (n = 2402) (mean = .7922564529558701)
Bin #23: (.2361153850188614,.2432115388833551] (n = 1976) (mean = .7844129554655871)
Bin #24: (.2432115388833551,.2503076927478488] (n = 1584) (mean = .7752525252525253)
Bin #25: (.2503076927478488,.2574038466123425] (n = 1313) (mean = .7783701447067783)
Bin #26: (.2574038466123425,.2645000004768362] (n = 1075) (mean = .7776744186046511)
Bin #27: (.2645000004768362,.2715961543413299] (n = 789) (mean = .8073510773130546)
Bin #28: (.2715961543413299,.2786923082058236] (n = 664) (mean = .7545180722891566)
Bin #29: (.2786923082058236,.2857884620703173] (n = 530) (mean = .7679245283018868)
Bin #30: (.2857884620703173,.292884615934811] (n = 425) (mean = .7694117647058824)
Bin #31: (.292884615934811,.2999807697993047] (n = 348) (mean = .7758620689655172)
Bin #32: (.2999807697993047,.3070769236637984] (n = 303) (mean = .759075907590759)
Bin #33: (.3070769236637984,.3141730775282921] (n = 223) (mean = .7668161434977578)
Bin #34: (.3141730775282921,.3212692313927858] (n = 170) (mean = .7705882352941177)
Bin #35: (.3212692313927858,.3283653852572795] (n = 133) (mean = .7142857142857143)
Bin #36: (.3283653852572795,.3354615391217732] (n = 90) (mean = .7555555555555555)
Bin #37: (.3354615391217732,.3425576929862669] (n = 102) (mean = .7647058823529411)
Bin #38: (.3425576929862669,.3496538468507606] (n = 75) (mean = .7066666666666667)
Bin #39: (.3496538468507606,.3567500007152543] (n = 41) (mean = .7560975609756098)
Bin #40: (.3567500007152543,.363846154579748] (n = 30) (mean = .7333333333333333)
Bin #41: (.363846154579748,.3709423084442417] (n = 17) (mean = .8235294117647058)
Bin #42: (.3709423084442417,.3780384623087354] (n = 19) (mean = .5263157894736842)
Bin #43: (.3780384623087354,.3851346161732291] (n = 20) (mean = .65)
Bin #44: (.3851346161732291,.3922307700377228] (n = 4) (mean = .75)
Bin #45: (.3922307700377228,.3993269239022165] (n = 5) (mean = .8)
Bin #46: (.3993269239022165,.4064230777667102] (n = 3) (mean = 1)
Bin #47: (.4064230777667102,.4135192316312039] (n = 2) (mean = 0)
Bin #48: (.4135192316312039,.4206153854956976] (n = 1) (mean = 0)
Bin #49: (.4206153854956976,.4277115393601913] (n = 1) (mean = 1)
Bin #50: (.4277115393601913,.434807693224685] (n = 0) (mean = .)
Bin #51: (.434807693224685,.4419038470891787] (n = 1) (mean = 1)
Bin #52: (.4419038470891787,.4490000009536743] (n = 1) (mean = 1)

. graph export cmogram_male_lfit.png, as(png) replace
{txt}(file cmogram_male_lfit.png written in PNG format)

{com}. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Figures"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Figures

{com}. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) qfitci title("BAC and Recidivism (Quadratic Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. graph export cmogram_bac1recidivism_qfit.png, as(png) replace
{txt}(file cmogram_bac1recidivism_qfit.png written in PNG format)

{com}. cmogram recidivism bac1 if bac1<0.15, cut(0.08) scatter line(0.08) lfit title("BAC and Recidivism (Linear Fit)")

Plotting mean of recidivism, conditional on bac1.

n = 124642

Bin #1: [0,.0018604650746944] (n = 1747) (mean = .1173440183171151)
Bin #2: (.0018604650746944,.0037209301493888] (n = 430) (mean = .1186046511627907)
Bin #3: (.0037209301493888,.0055813952240832] (n = 205) (mean = .0780487804878049)
Bin #4: (.0055813952240832,.0074418602987776] (n = 113) (mean = .0707964601769911)
Bin #5: (.0074418602987776,.009302325373472] (n = 123) (mean = .1382113821138211)
Bin #6: (.009302325373472,.0111627904481664] (n = 118) (mean = .1016949152542373)
Bin #7: (.0111627904481664,.0130232555228608] (n = 116) (mean = .1293103448275862)
Bin #8: (.0130232555228608,.0148837205975552] (n = 66) (mean = .0757575757575758)
Bin #9: (.0148837205975552,.0167441856722496] (n = 110) (mean = .1090909090909091)
Bin #10: (.0167441856722496,.018604650746944] (n = 139) (mean = .1151079136690648)
Bin #11: (.018604650746944,.0204651158216384] (n = 129) (mean = .1162790697674419)
Bin #12: (.0204651158216384,.0223255808963328] (n = 126) (mean = .1031746031746032)
Bin #13: (.0223255808963328,.0241860459710272] (n = 153) (mean = .130718954248366)
Bin #14: (.0241860459710272,.0260465110457216] (n = 171) (mean = .1345029239766082)
Bin #15: (.0260465110457216,.027906976120416] (n = 90) (mean = .1444444444444444)
Bin #16: (.027906976120416,.0297674411951104] (n = 175) (mean = .1371428571428571)
Bin #17: (.0297674411951104,.0316279062698048] (n = 203) (mean = .0788177339901478)
Bin #18: (.0316279062698048,.0334883713444992] (n = 208) (mean = .1057692307692308)
Bin #19: (.0334883713444992,.0353488364191936] (n = 212) (mean = .089622641509434)
Bin #20: (.0353488364191936,.037209301493888] (n = 222) (mean = .1036036036036036)
Bin #21: (.037209301493888,.0390697665685824] (n = 218) (mean = .1192660550458716)
Bin #22: (.0390697665685824,.0409302316432768] (n = 111) (mean = .1081081081081081)
Bin #23: (.0409302316432768,.0427906967179712] (n = 280) (mean = .1142857142857143)
Bin #24: (.0427906967179712,.0446511617926656] (n = 297) (mean = .1346801346801347)
Bin #25: (.0446511617926656,.04651162686736] (n = 309) (mean = .1488673139158576)
Bin #26: (.04651162686736,.0483720919420544] (n = 365) (mean = .1150684931506849)
Bin #27: (.0483720919420544,.0502325570167488] (n = 379) (mean = .1266490765171504)
Bin #28: (.0502325570167488,.0520930220914432] (n = 452) (mean = .1194690265486726)
Bin #29: (.0520930220914432,.0539534871661376] (n = 222) (mean = .1171171171171171)
Bin #30: (.0539534871661376,.055813952240832] (n = 503) (mean = .1272365805168986)
Bin #31: (.055813952240832,.0576744173155264] (n = 576) (mean = .1145833333333333)
Bin #32: (.0576744173155264,.0595348823902208] (n = 648) (mean = .1080246913580247)
Bin #33: (.0595348823902208,.0613953474649152] (n = 786) (mean = .1272264631043257)
Bin #34: (.0613953474649152,.0632558125396096] (n = 908) (mean = .1156387665198238)
Bin #35: (.0632558125396096,.065116277614304] (n = 935) (mean = .1165775401069519)
Bin #36: (.065116277614304,.0669767426889984] (n = 508) (mean = .1181102362204724)
Bin #37: (.0669767426889984,.0688372077636928] (n = 1124) (mean = .1245551601423488)
Bin #38: (.0688372077636928,.0706976728383872] (n = 1276) (mean = .1175548589341693)
Bin #39: (.0706976728383872,.0725581379130816] (n = 1421) (mean = .1147079521463758)
Bin #40: (.0725581379130816,.074418602987776] (n = 1534) (mean = .1160365058670143)
Bin #41: (.074418602987776,.0762790680624704] (n = 1661) (mean = .1149909692956051)
Bin #42: (.0762790680624704,.0781395331371648] (n = 1759) (mean = .1182490051165435)
Bin #43: (.0781395331371648,.0799999982118607] (n = 1882) (mean = .1121147715196599)
Bin #1: [.08,.0813800000786781] (n = 979) (mean = .0990806945863126)
Bin #2: (.0813800000786781,.0827600001573562] (n = 1099) (mean = .097361237488626)
Bin #3: (.0827600001573562,.0841400002360343] (n = 2134) (mean = .0974695407685098)
Bin #4: (.0841400002360343,.0855200003147124] (n = 1053) (mean = .1016144349477683)
Bin #5: (.0855200003147124,.0869000003933905] (n = 1084) (mean = .0839483394833948)
Bin #6: (.0869000003933905,.0882800004720686] (n = 2383) (mean = .0973562736047)
Bin #7: (.0882800004720686,.0896600005507467] (n = 1270) (mean = .1)
Bin #8: (.0896600005507467,.0910400006294248] (n = 2463) (mean = .096630125862769)
Bin #9: (.0910400006294248,.0924200007081029] (n = 1265) (mean = .0996047430830039)
Bin #10: (.0924200007081029,.093800000786781] (n = 1325) (mean = .100377358490566)
Bin #11: (.093800000786781,.0951800008654591] (n = 2621) (mean = .1041587180465471)
Bin #12: (.0951800008654591,.0965600009441372] (n = 1327) (mean = .0972117558402412)
Bin #13: (.0965600009441372,.0979400010228153] (n = 1325) (mean = .0867924528301887)
Bin #14: (.0979400010228153,.0993200011014934] (n = 2839) (mean = .1039098274040155)
Bin #15: (.0993200011014934,.1007000011801715] (n = 1388) (mean = .0965417867435159)
Bin #16: (.1007000011801715,.1020800012588496] (n = 2912) (mean = .1061126373626374)
Bin #17: (.1020800012588496,.1034600013375277] (n = 1479) (mean = .1041244083840433)
Bin #18: (.1034600013375277,.1048400014162058] (n = 1520) (mean = .1006578947368421)
Bin #19: (.1048400014162058,.1062200014948839] (n = 3005) (mean = .097171381031614)
Bin #20: (.1062200014948839,.107600001573562] (n = 1447) (mean = .0912232204561161)
Bin #21: (.107600001573562,.1089800016522401] (n = 1506) (mean = .1049136786188579)
Bin #22: (.1089800016522401,.1103600017309182] (n = 3025) (mean = .1067768595041322)
Bin #23: (.1103600017309182,.1117400018095963] (n = 1564) (mean = .0978260869565217)
Bin #24: (.1117400018095963,.1131200018882744] (n = 3139) (mean = .0974832749283211)
Bin #25: (.1131200018882744,.1145000019669525] (n = 1501) (mean = .1012658227848101)
Bin #26: (.1145000019669525,.1158800020456306] (n = 1620) (mean = .1203703703703704)
Bin #27: (.1158800020456306,.1172600021243087] (n = 3097) (mean = .1168873103002906)
Bin #28: (.1172600021243087,.1186400022029868] (n = 1550) (mean = .112258064516129)
Bin #29: (.1186400022029868,.1200200022816649] (n = 3135) (mean = .1129186602870813)
Bin #30: (.1200200022816649,.121400002360343] (n = 1666) (mean = .1002400960384154)
Bin #31: (.121400002360343,.1227800024390211] (n = 1584) (mean = .1212121212121212)
Bin #32: (.1227800024390211,.1241600025176992] (n = 3225) (mean = .1032558139534884)
Bin #33: (.1241600025176992,.1255400025963773] (n = 1589) (mean = .1107614852108244)
Bin #34: (.1255400025963773,.1269200026750554] (n = 1570) (mean = .1210191082802548)
Bin #35: (.1269200026750554,.1283000027537335] (n = 3210) (mean = .1087227414330218)
Bin #36: (.1283000027537335,.1296800028324116] (n = 1582) (mean = .1201011378002528)
Bin #37: (.1296800028324116,.1310600029110897] (n = 3170) (mean = .1066246056782334)
Bin #38: (.1310600029110897,.1324400029897678] (n = 1639) (mean = .1086028065893838)
Bin #39: (.1324400029897678,.1338200030684459] (n = 1604) (mean = .1066084788029925)
Bin #40: (.1338200030684459,.135200003147124] (n = 3268) (mean = .1193390452876377)
Bin #41: (.135200003147124,.1365800032258021] (n = 1637) (mean = .1148442272449603)
Bin #42: (.1365800032258021,.1379600033044802] (n = 1665) (mean = .1063063063063063)
Bin #43: (.1379600033044802,.1393400033831583] (n = 3161) (mean = .1142043657070547)
Bin #44: (.1393400033831583,.1407200034618364] (n = 1656) (mean = .126207729468599)
Bin #45: (.1407200034618364,.1421000035405145] (n = 3232) (mean = .1194306930693069)
Bin #46: (.1421000035405145,.1434800036191926] (n = 1567) (mean = .1174218251435865)
Bin #47: (.1434800036191926,.1448600036978707] (n = 1609) (mean = .1180857675574891)
Bin #48: (.1448600036978707,.1462400037765488] (n = 3077) (mean = .1095222619434514)
Bin #49: (.1462400037765488,.1476200038552269] (n = 1594) (mean = .1066499372647428)
Bin #50: (.1476200038552269,.1490000039339066] (n = 3272) (mean = .1271393643031785)

. graph export cmogram_bac1recidivism_lfit.png, as(png) replace
{txt}(file cmogram_bac1recidivism_lfit.png written in PNG format)

{com}. 
. preserve

. drop if bac1>=0.15
{txt}(89,916 observations deleted)

{com}. 
. 
. reg male D bac1

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(2, 124639)    = {res}     3.65
{txt}       Model {c |} {res} 1.20544197         2  .602720987   {txt}Prob > F        ={res}    0.0259
{txt}    Residual {c |} {res} 20571.1815   124,639  .165046105   {txt}R-squared       ={res}    0.0001
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res}  20572.387   124,641  .165053128   {txt}Root MSE        =   {res} .40626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        male{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0035064{col 26}{space 2} .0045767{col 37}{space 1}    0.77{col 46}{space 3}0.444{col 54}{space 4}-.0054639{col 67}{space 3} .0124767
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .0617325{col 26}{space 2} .0563238{col 37}{space 1}    1.10{col 46}{space 3}0.273{col 54}{space 4}-.0486611{col 67}{space 3} .1721261
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7820781{col 26}{space 2} .0041028{col 37}{space 1}  190.62{col 46}{space 3}0.000{col 54}{space 4} .7740367{col 67}{space 3} .7901194
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. 
. restore

. reg male D bac1

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   214,558
{txt}{hline 13}{c +}{hline 34}   F(2, 214555)    = {res}    10.15
{txt}       Model {c |} {res} 3.37256533         2  1.68628267   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  35652.544   214,555  .166169719   {txt}R-squared       ={res}    0.0001
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0001
{txt}       Total {c |} {res} 35655.9166   214,557  .166183889   {txt}Root MSE        =   {res} .40764

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        male{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0125446{col 26}{space 2} .0034233{col 37}{space 1}    3.66{col 46}{space 3}0.000{col 54}{space 4} .0058349{col 67}{space 3} .0192542
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.0828669{col 26}{space 2}  .019652{col 37}{space 1}   -4.22{col 46}{space 3}0.000{col 54}{space 4}-.1213844{col 67}{space 3}-.0443495
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7900573{col 26}{space 2} .0028979{col 37}{space 1}  272.63{col 46}{space 3}0.000{col 54}{space 4} .7843776{col 67}{space 3} .7957371
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. preserve

. drop if bac1>=0.15
{txt}(89,916 observations deleted)

{com}. count
  {res}124,642

{com}. restore

. count
  {res}214,558

{com}. preserve

. drop if bac1>=0.15
{txt}(89,916 observations deleted)

{com}. 
. reg male D bac1

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(2, 124639)    = {res}     3.65
{txt}       Model {c |} {res} 1.20544197         2  .602720987   {txt}Prob > F        ={res}    0.0259
{txt}    Residual {c |} {res} 20571.1815   124,639  .165046105   {txt}R-squared       ={res}    0.0001
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res}  20572.387   124,641  .165053128   {txt}Root MSE        =   {res} .40626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        male{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0035064{col 26}{space 2} .0045767{col 37}{space 1}    0.77{col 46}{space 3}0.444{col 54}{space 4}-.0054639{col 67}{space 3} .0124767
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .0617325{col 26}{space 2} .0563238{col 37}{space 1}    1.10{col 46}{space 3}0.273{col 54}{space 4}-.0486611{col 67}{space 3} .1721261
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7820781{col 26}{space 2} .0041028{col 37}{space 1}  190.62{col 46}{space 3}0.000{col 54}{space 4} .7740367{col 67}{space 3} .7901194
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, replace ctitle("Male") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Figures"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg white D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}    25.16
{txt}       Model {c |} {res} 3.13485033         1  3.13485033   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 15530.1291   124,640   .12459988   {txt}R-squared       ={res}    0.0002
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0002
{txt}       Total {c |} {res} 15533.2639   124,641  .124624032   {txt}Root MSE        =   {res} .35299

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}       white{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0129261{col 26}{space 2}  .002577{col 37}{space 1}    5.02{col 46}{space 3}0.000{col 54}{space 4} .0078752{col 67}{space 3}  .017977
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .8435463{col 26}{space 2}  .002327{col 37}{space 1}  362.50{col 46}{space 3}0.000{col 54}{space 4} .8389854{col 67}{space 3} .8481072
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("White") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Figures"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg aged D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}   278.90
{txt}       Model {c |} {res} 37386.8734         1  37386.8734   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 16708233.1   124,640  134.051935   {txt}R-squared       ={res}    0.0022
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0022
{txt}       Total {c |} {res}   16745620   124,641  134.350815   {txt}Root MSE        =   {res} 11.578

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        aged{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-1.411621{col 26}{space 2}  .084527{col 37}{space 1}  -16.70{col 46}{space 3}0.000{col 54}{space 4}-1.577293{col 67}{space 3} -1.24595
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 35.46058{col 26}{space 2}  .076327{col 37}{space 1}  464.59{col 46}{space 3}0.000{col 54}{space 4} 35.31098{col 67}{space 3} 35.61018
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Age") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Figures"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg acc D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}     5.42
{txt}       Model {c |} {res}  .53660458         1   .53660458   {txt}Prob > F        ={res}    0.0199
{txt}    Residual {c |} {res}  12339.242   124,640  .098999053   {txt}R-squared       ={res}    0.0000
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res} 12339.7786   124,641  .099002564   {txt}Root MSE        =   {res} .31464

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         acc{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0053479{col 26}{space 2} .0022971{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-.0098501{col 67}{space 3}-.0008457
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1157757{col 26}{space 2} .0020742{col 37}{space 1}   55.82{col 46}{space 3}0.000{col 54}{space 4} .1117103{col 67}{space 3} .1198412
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Accident") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Figures"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. 
. restore

. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Tables"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Tables

{com}. preserve

. drop if bac1>=0.15
{txt}(89,916 observations deleted)

{com}. 
. reg male D bac1

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(2, 124639)    = {res}     3.65
{txt}       Model {c |} {res} 1.20544197         2  .602720987   {txt}Prob > F        ={res}    0.0259
{txt}    Residual {c |} {res} 20571.1815   124,639  .165046105   {txt}R-squared       ={res}    0.0001
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res}  20572.387   124,641  .165053128   {txt}Root MSE        =   {res} .40626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        male{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0035064{col 26}{space 2} .0045767{col 37}{space 1}    0.77{col 46}{space 3}0.444{col 54}{space 4}-.0054639{col 67}{space 3} .0124767
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .0617325{col 26}{space 2} .0563238{col 37}{space 1}    1.10{col 46}{space 3}0.273{col 54}{space 4}-.0486611{col 67}{space 3} .1721261
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7820781{col 26}{space 2} .0041028{col 37}{space 1}  190.62{col 46}{space 3}0.000{col 54}{space 4} .7740367{col 67}{space 3} .7901194
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, replace ctitle("Male") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg white D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}    25.16
{txt}       Model {c |} {res} 3.13485033         1  3.13485033   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 15530.1291   124,640   .12459988   {txt}R-squared       ={res}    0.0002
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0002
{txt}       Total {c |} {res} 15533.2639   124,641  .124624032   {txt}Root MSE        =   {res} .35299

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}       white{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0129261{col 26}{space 2}  .002577{col 37}{space 1}    5.02{col 46}{space 3}0.000{col 54}{space 4} .0078752{col 67}{space 3}  .017977
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .8435463{col 26}{space 2}  .002327{col 37}{space 1}  362.50{col 46}{space 3}0.000{col 54}{space 4} .8389854{col 67}{space 3} .8481072
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("White") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg aged D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}   278.90
{txt}       Model {c |} {res} 37386.8734         1  37386.8734   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 16708233.1   124,640  134.051935   {txt}R-squared       ={res}    0.0022
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0022
{txt}       Total {c |} {res}   16745620   124,641  134.350815   {txt}Root MSE        =   {res} 11.578

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        aged{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-1.411621{col 26}{space 2}  .084527{col 37}{space 1}  -16.70{col 46}{space 3}0.000{col 54}{space 4}-1.577293{col 67}{space 3} -1.24595
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 35.46058{col 26}{space 2}  .076327{col 37}{space 1}  464.59{col 46}{space 3}0.000{col 54}{space 4} 35.31098{col 67}{space 3} 35.61018
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Age") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg acc D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}     5.42
{txt}       Model {c |} {res}  .53660458         1   .53660458   {txt}Prob > F        ={res}    0.0199
{txt}    Residual {c |} {res}  12339.242   124,640  .098999053   {txt}R-squared       ={res}    0.0000
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res} 12339.7786   124,641  .099002564   {txt}Root MSE        =   {res} .31464

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         acc{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0053479{col 26}{space 2} .0022971{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-.0098501{col 67}{space 3}-.0008457
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1157757{col 26}{space 2} .0020742{col 37}{space 1}   55.82{col 46}{space 3}0.000{col 54}{space 4} .1117103{col 67}{space 3} .1198412
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Accident") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. 
. restore

. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Tables"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Tables

{com}. preserve

. drop if bac1>=0.15
{txt}(89,916 observations deleted)

{com}. 
. reg male D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}     6.10
{txt}       Model {c |} {res}  1.0071754         1   1.0071754   {txt}Prob > F        ={res}    0.0135
{txt}    Residual {c |} {res} 20571.3798   124,640  .165046372   {txt}R-squared       ={res}    0.0000
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res}  20572.387   124,641  .165053128   {txt}Root MSE        =   {res} .40626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        male{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0073267{col 26}{space 2} .0029659{col 37}{space 1}    2.47{col 46}{space 3}0.014{col 54}{space 4} .0015136{col 67}{space 3} .0131399
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .7854846{col 26}{space 2} .0026782{col 37}{space 1}  293.29{col 46}{space 3}0.000{col 54}{space 4} .7802353{col 67}{space 3} .7907338
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, replace ctitle("Male") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg white D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}    25.16
{txt}       Model {c |} {res} 3.13485033         1  3.13485033   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 15530.1291   124,640   .12459988   {txt}R-squared       ={res}    0.0002
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0002
{txt}       Total {c |} {res} 15533.2639   124,641  .124624032   {txt}Root MSE        =   {res} .35299

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}       white{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2} .0129261{col 26}{space 2}  .002577{col 37}{space 1}    5.02{col 46}{space 3}0.000{col 54}{space 4} .0078752{col 67}{space 3}  .017977
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .8435463{col 26}{space 2}  .002327{col 37}{space 1}  362.50{col 46}{space 3}0.000{col 54}{space 4} .8389854{col 67}{space 3} .8481072
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("White") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg aged D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}   278.90
{txt}       Model {c |} {res} 37386.8734         1  37386.8734   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 16708233.1   124,640  134.051935   {txt}R-squared       ={res}    0.0022
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0022
{txt}       Total {c |} {res}   16745620   124,641  134.350815   {txt}Root MSE        =   {res} 11.578

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        aged{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-1.411621{col 26}{space 2}  .084527{col 37}{space 1}  -16.70{col 46}{space 3}0.000{col 54}{space 4}-1.577293{col 67}{space 3} -1.24595
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} 35.46058{col 26}{space 2}  .076327{col 37}{space 1}  464.59{col 46}{space 3}0.000{col 54}{space 4} 35.31098{col 67}{space 3} 35.61018
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Age") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. reg acc D

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}   124,642
{txt}{hline 13}{c +}{hline 34}   F(1, 124640)    = {res}     5.42
{txt}       Model {c |} {res}  .53660458         1   .53660458   {txt}Prob > F        ={res}    0.0199
{txt}    Residual {c |} {res}  12339.242   124,640  .098999053   {txt}R-squared       ={res}    0.0000
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0000
{txt}       Total {c |} {res} 12339.7786   124,641  .099002564   {txt}Root MSE        =   {res} .31464

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}         acc{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0053479{col 26}{space 2} .0022971{col 37}{space 1}   -2.33{col 46}{space 3}0.020{col 54}{space 4}-.0098501{col 67}{space 3}-.0008457
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1157757{col 26}{space 2} .0020742{col 37}{space 1}   55.82{col 46}{space 3}0.000{col 54}{space 4} .1117103{col 67}{space 3} .1198412
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using covariate_balance.doc, append ctitle("Accident") label
{txt}{stata `"shellout using `"covariate_balance.doc"'"':covariate_balance.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "covariate_balance.txt", label"':seeout}

{com}. 
. restore

. cd "/Users/danielcabarcas/Documents/GitHub/RDD/Tables"
{res}/Users/danielcabarcas/Documents/GitHub/RDD/Tables

{com}. 
. reg recidivism D bac1 male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(6, 89960)     = {res}    54.03
{txt}       Model {c |} {res} 30.8506323         6  5.14177206   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 8561.28722    89,960   .09516771   {txt}R-squared       ={res}    0.0036
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0035
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30849

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0273331{col 26}{space 2} .0040337{col 37}{space 1}   -6.78{col 46}{space 3}0.000{col 54}{space 4}-.0352391{col 67}{space 3}-.0194271
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .3210099{col 26}{space 2} .0750691{col 37}{space 1}    4.28{col 46}{space 3}0.000{col 54}{space 4} .1738753{col 67}{space 3} .4681445
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331999{col 26}{space 2} .0025358{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282299{col 67}{space 3}   .03817
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162127{col 26}{space 2} .0029087{col 37}{space 1}    5.57{col 46}{space 3}0.000{col 54}{space 4} .0105117{col 67}{space 3} .0219138
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008474{col 26}{space 2} .0000891{col 37}{space 1}   -9.51{col 46}{space 3}0.000{col 54}{space 4} -.001022{col 67}{space 3}-.0006728
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0044392{col 26}{space 2} .0034144{col 37}{space 1}    1.30{col 46}{space 3}0.194{col 54}{space 4} -.002253{col 67}{space 3} .0111315
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0853324{col 26}{space 2} .0069415{col 37}{space 1}   12.29{col 46}{space 3}0.000{col 54}{space 4} .0717271{col 67}{space 3} .0989376
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates.doc, replace ctitle("Linear BAC") label
{txt}{stata `"shellout using `"rdestimates.doc"'"':rdestimates.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates.txt", label"':seeout}

{com}. reg recidivism D bac1 bac1D male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(7, 89959)     = {res}    47.00
{txt}       Model {c |} {res} 31.3056142         7   4.4722306   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 8560.83224    89,959  .095163711   {txt}R-squared       ={res}    0.0036
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0036
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30849

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0590663{col 26}{space 2}  .015063{col 37}{space 1}   -3.92{col 46}{space 3}0.000{col 54}{space 4}-.0885896{col 67}{space 3} -.029543
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.0428678{col 26}{space 2} .1825631{col 37}{space 1}   -0.23{col 46}{space 3}0.814{col 54}{space 4}-.4006896{col 67}{space 3} .3149541
{txt}{space 7}bac1D {c |}{col 14}{res}{space 2} .4380899{col 26}{space 2} .2003558{col 37}{space 1}    2.19{col 46}{space 3}0.029{col 54}{space 4} .0453945{col 67}{space 3} .8307854
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331803{col 26}{space 2} .0025357{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282103{col 67}{space 3} .0381503
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162238{col 26}{space 2} .0029087{col 37}{space 1}    5.58{col 46}{space 3}0.000{col 54}{space 4} .0105229{col 67}{space 3} .0219248
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008537{col 26}{space 2} .0000891{col 37}{space 1}   -9.58{col 46}{space 3}0.000{col 54}{space 4}-.0010284{col 67}{space 3} -.000679
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0042096{col 26}{space 2}  .003416{col 37}{space 1}    1.23{col 46}{space 3}0.218{col 54}{space 4}-.0024857{col 67}{space 3} .0109049
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1093521{col 26}{space 2} .0129945{col 37}{space 1}    8.42{col 46}{space 3}0.000{col 54}{space 4} .0838831{col 67}{space 3} .1348211
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates.doc, append ctitle("BAC*DUI") label
{txt}{stata `"shellout using `"rdestimates.doc"'"':rdestimates.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates.txt", label"':seeout}

{com}. reg recidivism D bac1 bac12D male white aged acc if bac1>.03 & bac1<.13

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    89,967
{txt}{hline 13}{c +}{hline 34}   F(7, 89959)     = {res}    47.10
{txt}       Model {c |} {res} 31.3754477         7  4.48220681   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res}  8560.7624    89,959  .095162934   {txt}R-squared       ={res}    0.0037
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0036
{txt}       Total {c |} {res} 8592.13785    89,966  .095504278   {txt}Root MSE        =   {res} .30848

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}  -.03675{col 26}{space 2} .0056877{col 37}{space 1}   -6.46{col 46}{space 3}0.000{col 54}{space 4}-.0478978{col 67}{space 3}-.0256022
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.0655732{col 26}{space 2} .1809245{col 37}{space 1}   -0.36{col 46}{space 3}0.717{col 54}{space 4}-.4201836{col 67}{space 3} .2890371
{txt}{space 6}bac12D {c |}{col 14}{res}{space 2} 2.189773{col 26}{space 2}  .932459{col 37}{space 1}    2.35{col 46}{space 3}0.019{col 54}{space 4} .3621623{col 67}{space 3} 4.017384
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0331841{col 26}{space 2} .0025357{col 37}{space 1}   13.09{col 46}{space 3}0.000{col 54}{space 4} .0282142{col 67}{space 3} .0381541
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0162242{col 26}{space 2} .0029087{col 37}{space 1}    5.58{col 46}{space 3}0.000{col 54}{space 4} .0105232{col 67}{space 3} .0219251
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0008543{col 26}{space 2} .0000891{col 37}{space 1}   -9.59{col 46}{space 3}0.000{col 54}{space 4} -.001029{col 67}{space 3}-.0006796
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0041884{col 26}{space 2}  .003416{col 37}{space 1}    1.23{col 46}{space 3}0.220{col 54}{space 4}-.0025069{col 67}{space 3} .0108838
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1108539{col 26}{space 2} .0128953{col 37}{space 1}    8.60{col 46}{space 3}0.000{col 54}{space 4} .0855792{col 67}{space 3} .1361286
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates.doc, append ctitle("BAC*DUI2") label
{txt}{stata `"shellout using `"rdestimates.doc"'"':rdestimates.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates.txt", label"':seeout}

{com}. reg recidivism D bac1 male white aged acc if bac1>.055 & bac1<.105

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    46,957
{txt}{hline 13}{c +}{hline 34}   F(6, 46950)     = {res}    31.12
{txt}       Model {c |} {res} 17.5107097         6  2.91845161   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 4403.57786    46,950  .093792926   {txt}R-squared       ={res}    0.0040
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0038
{txt}       Total {c |} {res} 4421.08857    46,956  .094153858   {txt}Root MSE        =   {res} .30626

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0219433{col 26}{space 2} .0055831{col 37}{space 1}   -3.93{col 46}{space 3}0.000{col 54}{space 4}-.0328863{col 67}{space 3}-.0110004
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2} .1875675{col 26}{space 2} .2010223{col 37}{space 1}    0.93{col 46}{space 3}0.351{col 54}{space 4}-.2064391{col 67}{space 3} .5815741
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0357382{col 26}{space 2} .0034752{col 37}{space 1}   10.28{col 46}{space 3}0.000{col 54}{space 4} .0289269{col 67}{space 3} .0425496
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0175726{col 26}{space 2} .0039737{col 37}{space 1}    4.42{col 46}{space 3}0.000{col 54}{space 4} .0097842{col 67}{space 3}  .025361
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0007555{col 26}{space 2} .0001216{col 37}{space 1}   -6.21{col 46}{space 3}0.000{col 54}{space 4}-.0009939{col 67}{space 3}-.0005172
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0043052{col 26}{space 2} .0049106{col 37}{space 1}    0.88{col 46}{space 3}0.381{col 54}{space 4}-.0053197{col 67}{space 3} .0139301
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0861509{col 26}{space 2} .0155768{col 37}{space 1}    5.53{col 46}{space 3}0.000{col 54}{space 4} .0556202{col 67}{space 3} .1166815
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates2.doc, replace ctitle("Linear BAC") label
{txt}{stata `"shellout using `"rdestimates2.doc"'"':rdestimates2.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates2.txt", label"':seeout}

{com}. reg recidivism D bac1 bac1D male white aged acc if bac1>.055 & bac1<.105

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    46,957
{txt}{hline 13}{c +}{hline 34}   F(7, 46949)     = {res}    26.89
{txt}       Model {c |} {res} 17.6564614         7  2.52235163   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 4403.43211    46,949  .093791819   {txt}R-squared       ={res}    0.0040
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0038
{txt}       Total {c |} {res} 4421.08857    46,956  .094153858   {txt}Root MSE        =   {res} .30625

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0643427{col 26}{space 2} .0344674{col 37}{space 1}   -1.87{col 46}{space 3}0.062{col 54}{space 4}-.1318992{col 67}{space 3} .0032139
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.1955582{col 26}{space 2} .3672416{col 37}{space 1}   -0.53{col 46}{space 3}0.594{col 54}{space 4} -.915357{col 67}{space 3} .5242407
{txt}{space 7}bac1D {c |}{col 14}{res}{space 2} .5470655{col 26}{space 2} .4388488{col 37}{space 1}    1.25{col 46}{space 3}0.213{col 54}{space 4}-.3130846{col 67}{space 3} 1.407215
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0357191{col 26}{space 2} .0034752{col 37}{space 1}   10.28{col 46}{space 3}0.000{col 54}{space 4} .0289077{col 67}{space 3} .0425305
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0175942{col 26}{space 2} .0039737{col 37}{space 1}    4.43{col 46}{space 3}0.000{col 54}{space 4} .0098058{col 67}{space 3} .0253826
{txt}{space 8}aged {c |}{col 14}{res}{space 2}-.0007579{col 26}{space 2} .0001216{col 37}{space 1}   -6.23{col 46}{space 3}0.000{col 54}{space 4}-.0009963{col 67}{space 3}-.0005195
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0042208{col 26}{space 2} .0049111{col 37}{space 1}    0.86{col 46}{space 3}0.390{col 54}{space 4} -.005405{col 67}{space 3} .0138466
{txt}{space 7}_cons {c |}{col 14}{res}{space 2}  .113252{col 26}{space 2} .0267445{col 37}{space 1}    4.23{col 46}{space 3}0.000{col 54}{space 4} .0608324{col 67}{space 3} .1656716
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates2.doc, append ctitle("BAC*DUI") label
{txt}{stata `"shellout using `"rdestimates2.doc"'"':rdestimates2.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates2.txt", label"':seeout}

{com}. reg recidivism D bac1 bac12D male white aged acc if bac1>.055 & bac1<.105

{txt}      Source {c |}       SS           df       MS      Number of obs   ={res}    46,957
{txt}{hline 13}{c +}{hline 34}   F(7, 46949)     = {res}    26.91
{txt}       Model {c |} {res} 17.6660088         7  2.52371555   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 4403.42256    46,949  .093791616   {txt}R-squared       ={res}    0.0040
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.0038
{txt}       Total {c |} {res} 4421.08857    46,956  .094153858   {txt}Root MSE        =   {res} .30625

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}  recidivism{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}-.0394737{col 26}{space 2} .0147231{col 37}{space 1}   -2.68{col 46}{space 3}0.007{col 54}{space 4}-.0683313{col 67}{space 3}-.0106162
{txt}{space 8}bac1 {c |}{col 14}{res}{space 2}-.2071218{col 26}{space 2} .3667304{col 37}{space 1}   -0.56{col 46}{space 3}0.572{col 54}{space 4}-.9259187{col 67}{space 3} .5116751
{txt}{space 6}bac12D {c |}{col 14}{res}{space 2} 3.018848{col 26}{space 2} 2.346057{col 37}{space 1}    1.29{col 46}{space 3}0.198{col 54}{space 4}-1.579459{col 67}{space 3} 7.617154
{txt}{space 8}male {c |}{col 14}{res}{space 2} .0357192{col 26}{space 2} .0034752{col 37}{space 1}   10.28{col 46}{space 3}0.000{col 54}{space 4} .0289078{col 67}{space 3} .0425305
{txt}{space 7}white {c |}{col 14}{res}{space 2} .0175926{col 26}{space 2} .0039737{col 37}{space 1}    4.43{col 46}{space 3}0.000{col 54}{space 4} .0098042{col 67}{space 3} .0253811
{txt}{space 8}aged {c |}{col 14}{res}{space 2} -.000758{col 26}{space 2} .0001216{col 37}{space 1}   -6.23{col 46}{space 3}0.000{col 54}{space 4}-.0009963{col 67}{space 3}-.0005196
{txt}{space 9}acc {c |}{col 14}{res}{space 2} .0042172{col 26}{space 2} .0049111{col 37}{space 1}    0.86{col 46}{space 3}0.391{col 54}{space 4}-.0054086{col 67}{space 3}  .013843
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .1140715{col 26}{space 2} .0267104{col 37}{space 1}    4.27{col 46}{space 3}0.000{col 54}{space 4} .0617188{col 67}{space 3} .1664242
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using rdestimates2.doc, append ctitle("BAC*DUI2") label
{txt}{stata `"shellout using `"rdestimates2.doc"'"':rdestimates2.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "rdestimates2.txt", label"':seeout}

{com}. *8

. reg bac1 D, h
{txt}(note: hascons false)

      Source {c |}       SS           df       MS      Number of obs   ={res}   214,558
{txt}{hline 13}{c +}{hline 34}   F(1, 214556)    = {res} 96282.45
{txt}       Model {c |} {res} 193.083429         1  193.083429   {txt}Prob > F        ={res}    0.0000
{txt}    Residual {c |} {res} 430.267501   214,556  .002005386   {txt}R-squared       ={res}    0.3098
{txt}{hline 13}{c +}{hline 34}   Adj R-squared   ={res}    0.3097
{txt}       Total {c |} {res}  623.35093   214,557  .002905293   {txt}Root MSE        =   {res} .04478

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}        bac1{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}   .09695{col 26}{space 2} .0003124{col 37}{space 1}  310.29{col 46}{space 3}0.000{col 54}{space 4} .0963376{col 67}{space 3} .0975624
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0551818{col 26}{space 2} .0002952{col 37}{space 1}  186.92{col 46}{space 3}0.000{col 54}{space 4} .0546032{col 67}{space 3} .0557604
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg3 using test1.doc
{err}command {bf}outreg3{sf} is unrecognized
{txt}{search r(199):r(199);}

{com}. outreg2 using test1.doc
{txt}{stata `"shellout using `"test1.doc"'"':test1.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "test1.txt""':seeout}

{com}. h reg

. reg bac1 D, r

{txt}Linear regression                               Number of obs     = {res}   214,558
                                                {txt}F(1, 214556)      >  {res} 99999.00
                                                {txt}Prob > F          = {res}    0.0000
                                                {txt}R-squared         = {res}    0.3098
                                                {txt}Root MSE          =    {res} .04478

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 14}{c |}{col 26}    Robust
{col 1}        bac1{col 14}{c |}      Coef.{col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 11}D {c |}{col 14}{res}{space 2}   .09695{col 26}{space 2} .0001951{col 37}{space 1}  496.84{col 46}{space 3}0.000{col 54}{space 4} .0965675{col 67}{space 3} .0973324
{txt}{space 7}_cons {c |}{col 14}{res}{space 2} .0551818{col 26}{space 2} .0001635{col 37}{space 1}  337.48{col 46}{space 3}0.000{col 54}{space 4} .0548613{col 67}{space 3} .0555023
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}
{com}. outreg2 using test1.doc
{txt}{stata `"shellout using `"test1.doc"'"':test1.doc}
{browse `"/Users/danielcabarcas/Documents/GitHub/RDD/Tables"' :dir}{com} : {txt}{stata `"seeout using "test1.txt""':seeout}

{com}. log close
      {txt}name:  {res}<unnamed>
       {txt}log:  {res}/Users/danielcabarcas/Documents/GitHub/RDD/Do/RDD.smcl
  {txt}log type:  {res}smcl
 {txt}closed on:  {res}14 Jun 2020, 16:58:38
{txt}{.-}
{smcl}
{txt}{sf}{ul off}